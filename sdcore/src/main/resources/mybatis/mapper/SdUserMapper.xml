<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hkt.btu.sd.core.dao.mapper.SdUserMapper">
    <resultMap id="SdUserEntity" type="com.hkt.btu.sd.core.dao.entity.SdUserEntity">
        <result column="USER_ID" property="userId"/>
        <result column="NAME" property="name"/>
        <result column="STATUS" property="status"/>
        <result column="MOBILE" property="mobile"/>
        <result column="EMAIL" property="email"/>
        <result column="COMPANY_ID" property="companyId"/>
        <result column="STAFF_ID" property="staffId"/>
        <result column="LDAP_DOMAIN" property="ldapDomain"/>

        <result column="PASSWORD" property="password"/>
        <result column="PASSWORD_MODIFYDATE" property="passwordModifydate"/>
        <result column="LOGIN_TRIED" property="loginTried"/>

        <result column="CREATEDATE" property="createdate"/>
        <result column="CREATEBY" property="createby"/>
        <result column="MODIFYDATE" property="modifydate"/>
        <result column="MODIFYBY" property="modifyby"/>
        <result column="REMARKS" property="remarks"/>
    </resultMap>

    <select id="getUserByEmail" resultMap="SdUserEntity">
        select *
        from USER_PROFILE
        where email = #{email}
    </select>

    <select id="getLdapUserByUserId" parameterType="java.lang.String" resultMap="SdUserEntity">
        select *
        from USER_PROFILE
        where user_id = #{userId}
    </select>

    <select id="getUserByLdapDomain" resultMap="SdUserEntity">
        select *
        from USER_PROFILE
        where ldap_domain like #{ldapDomain}
    </select>

    <select id="getUserByUserId" resultMap="SdUserEntity">
        select *
        from USER_PROFILE
        where USER_ID = #{userId}
        <if test="companyId != null">
            AND COMPANY_ID = #{companyId}
        </if>
    </select>

    <update id="addLoginTriedByUsername">
        update USER_PROFILE
        set LOGIN_TRIED = LOGIN_TRIED + 1
        where EMAIL = #{username}
    </update>

    <update id="resetLoginTriedByUsername">
        update USER_PROFILE
        set LOGIN_TRIED = 0
        where EMAIL = #{username}
    </update>

    <update id="updateUserStatusByUsername">
        update USER_PROFILE
        set STATUS   = #{status},
            MODIFYBY = #{modifyby}
        where EMAIL = #{username}
    </update>

    <select id="getNewUserId" resultType="Integer">
        select SEQ_USER_PROFILE_USER_ID.NEXTVAL
        FROM DUAL
    </select>

    <insert id="insertUser" parameterType="com.hkt.btu.sd.core.dao.entity.SdUserEntity">
        insert into USER_PROFILE (USER_ID, NAME, STATUS, MOBILE, LDAP_DOMAIN, EMAIL, STAFF_ID, PASSWORD,
                                  PASSWORD_MODIFYDATE,
                                  CREATEBY, MODIFYBY)
        values (#{userId}, #{name}, #{status}, #{mobile}, #{ldapDomain}, #{email}, #{staffId}, #{password}, null,
                #{createby},
                #{createby})
    </insert>

    <update id="updateUser">
        update USER_PROFILE
        <set>
            <if test="name != null">NAME=#{name},</if>
            <if test="mobile != null">MOBILE=#{mobile},</if>
            MODIFYDATE = CURRENT_TIMESTAMP, MODIFYBY = #{modifyby}
        </set>
        where USER_ID = #{userId}
    </update>

    <update id="updateLdapUser">
        update USER_PROFILE
        <set>
            <if test="name != null">NAME=#{name},</if>
            <if test="email !=  null">EMAIL=#{email},</if>
            MODIFYDATE = CURRENT_TIMESTAMP
        </set>
        where USER_ID = #{userId}
    </update>

    <update id="changeUserType">
        update USER_PROFILE
        <set>
            <if test="name != null">NAME=#{name},</if>
            <if test="employeeNumber != null">USER_ID=#{employeeNumber},</if>
            <if test="mobile != null">MOBILE=#{mobile},</if>
            <if test="email != null">EMAIL=#{email},</if>
            <if test="modifyby != null">MODIFYBY=#{modifyby},</if>
            MODIFYDATE = CURRENT_TIMESTAMP
        </set>
        where USER_ID = #{userId}
    </update>

    <update id="updateUserPassword">
        update USER_PROFILE
        set PASSWORD            = #{password},
            PASSWORD_MODIFYDATE = CURRENT_TIMESTAMP
        where USER_ID = #{userId}
    </update>

    <insert id="insertPasswordHist">
        insert into USER_PWD_HIST (USER_ID, PASSWORD)
        values (#{userId}, #{password})
    </insert>

    <select id="getPasswordHistByUserId" resultType="String">
        select PASSWORD
        from USER_PWD_HIST
        where USER_ID = #{userId}
    </select>

    <sql id="searchUserSql">
        from USER_PROFILE u
        <if test="roleId != null and roleId.indexOf('__') >= 0">
            INNER JOIN
            USER_USER_ROLE uur
            ON u.USER_ID = uur.USER_ID
            AND uur.ROLE_ID =
            (
            SELECT SUBSTR(#{roleId}, (
            SELECT INSTR(#{roleId}, '__') + 2
            FROM DUAL
            )
            ) FROM DUAL
            )
        </if>

        <where>
            <if test="userId != null">
                u.USER_ID = #{userId}
            </if>
            <if test="email != null">
                <bind name="like_email" value="'%' + email + '%'"/>
                AND u.EMAIL like #{like_email}
            </if>
            <if test="name != null">
                <bind name="like_name" value="'%' + name + '%'"/>
                AND u.NAME like #{like_name}
            </if>
        </where>
    </sql>
    <select id="searchUser" resultMap="SdUserEntity">
        select u.*
        <include refid="searchUserSql"/>
        order by u.USER_ID
        OFFSET #{offset} ROWS FETCH NEXT #{pageSize} ROWS ONLY
    </select>
    <select id="countSearchUser" resultType="Integer">
        select count(1)
        <include refid="searchUserSql"/>
    </select>


</mapper>
