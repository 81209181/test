<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hkt.btu.sd.core.dao.mapper.SdAccessRequestVisitorMapper" >
    <resultMap id="SdAccessRequestVisitorEntity" type="com.hkt.btu.sd.core.dao.entity.SdAccessRequestVisitorEntity" >
        <result column="VISITOR_ACCESS_ID" property="visitorAccessId" />
        <result column="ACCESS_REQUEST_ID" property="accessRequestId" />
        <result column="HASHED_ID" property="hashedRequestId" />

        <result column="VISITOR_NAME" property="visitorName" />
        <result column="COMPANY_NAME" property="companyName" />
        <result column="STAFF_ID" property="staffId" />
        <result column="MOBILE" property="mobile" />

        <result column="TIME_IN" property="timeIn" />
        <result column="TIME_OUT" property="timeOut" />
        <result column="VISITOR_CARD_NUM" property="visitorCardNum" />

        <result column="VISIT_DATE_FROM" property="visitDateFrom" />
        <result column="VISIT_LOCATION" property="visitLocation" />

        <result column="CREATEDATE" property="createdate" />
        <result column="CREATEBY" property="createby" />
        <result column="MODIFYDATE" property="modifydate" />
        <result column="MODIFYBY" property="modifyby" />
        <result column="REMARKS" property="remarks" />
    </resultMap>

    <select id="getAccessRequestVisitorsByAccessRequestId" resultMap="SdAccessRequestVisitorEntity">
        select v.*, h.HASHED_ID
        from NOC_ACCESS_REQUEST_VISITOR v
        left join NOC_ACCESS_REQUEST r
          on r.ACCESS_REQUEST_ID = v.ACCESS_REQUEST_ID
        left join NOC_ACCESS_REQUEST_HASH h
          on h.ACCESS_REQUEST_ID = r.ACCESS_REQUEST_ID
        <where>
            <if test="accessRequestId != null">
                AND v.ACCESS_REQUEST_ID = #{accessRequestId}
            </if>
            <if test="companyId != null">
                AND r.COMPANY_ID = #{companyId}
            </if>
            <if test="userId != null">
                AND r.REQUESTER_ID = #{userId}
            </if>
        </where>
    </select>

    <sql id="searchVisitorSql">
        from NOC_ACCESS_REQUEST_VISITOR v
        left join NOC_ACCESS_REQUEST r
        on r.ACCESS_REQUEST_ID = v.ACCESS_REQUEST_ID
        left join NOC_ACCESS_REQUEST_HASH h
        on h.ACCESS_REQUEST_ID = r.ACCESS_REQUEST_ID
        <where>
            <if test="companyIdRestriction != null">
                AND r.COMPANY_ID = #{companyIdRestriction}
            </if>
            <if test="userIdRestriction != null">
                AND r.REQUESTER_ID = #{userIdRestriction}
            </if>
            <if test="visitorName != null">
                <bind name="like_visitorName" value="'%' + visitorName + '%'" />
                AND v.VISITOR_NAME like #{like_visitorName}
            </if>
            <if test="companyName != null">
                <bind name="like_companyName" value="'%' + companyName + '%'" />
                AND v.COMPANY_NAME like #{like_companyName}
            </if>
            <if test="visitDateFrom != null">
                AND DATE(VISIT_DATE_FROM) >= DATE(#{visitDateFrom})
            </if>
            <if test="visitDateTo != null">
                AND DATE(#{visitDateTo}) >= DATE(VISIT_DATE_TO)
            </if>
            <if test="visitLocation != null">
                AND UPPER(VISIT_LOCATION) = UPPER(#{visitLocation})
            </if>
        </where>
    </sql>
    <select id="searchVisitor" resultMap="SdAccessRequestVisitorEntity" >
        # noinspection SqlResolve
        select v.*, r.VISIT_DATE_FROM, r.VISIT_LOCATION, h.HASHED_ID
        <include refid="searchVisitorSql"/>
        order by r.VISIT_DATE_FROM desc, r.VISIT_DATE_TO desc, r.STATUS
        LIMIT #{offset}, #{pageSize}
    </select>
    <select id="countSearchVisitor" resultType="Integer" >
        select count(1)
        <include refid="searchVisitorSql"/>
    </select>

    <insert id="insertVisitors" parameterType="com.hkt.btu.sd.core.dao.entity.SdAccessRequestVisitorEntity"
            useGeneratedKeys="true" keyProperty="visitorAccessId">
        insert into NOC_ACCESS_REQUEST_VISITOR
        (
            ACCESS_REQUEST_ID,
            VISITOR_NAME, COMPANY_NAME, STAFF_ID, MOBILE,
            TIME_IN, TIME_OUT, VISITOR_CARD_NUM,
            CREATEBY, MODIFYBY
        )
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (
                #{item.accessRequestId},
                #{item.visitorName},#{item.companyName},#{item.staffId},#{item.mobile},
                #{item.timeIn},#{item.timeOut},#{item.visitorCardNum},
                #{item.createby},#{item.modifyby}
            )
        </foreach>
    </insert>

    <update id="checkin">
        update NOC_ACCESS_REQUEST_VISITOR
        set TIME_IN = CURRENT_TIMESTAMP , VISITOR_CARD_NUM = #{visitorCardNum}
        where VISITOR_ACCESS_ID = #{visitorAccessId}
        and TIME_IN is null
        and VISITOR_CARD_NUM is null
    </update>

    <update id="checkout">
        update NOC_ACCESS_REQUEST_VISITOR
        set TIME_OUT = CURRENT_TIMESTAMP
        where VISITOR_ACCESS_ID = #{visitorAccessId}
        and TIME_OUT is null
    </update>

</mapper>
