<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hkt.btu.sd.core.dao.mapper.SdUserRoleMapper">
    <resultMap id="SdUserRoleEntity" type="com.hkt.btu.sd.core.dao.entity.SdUserRoleEntity">
        <result column="ROLE_ID" property="roleId"/>
        <result column="ROLE_DESC" property="roleDesc"/>
        <result column="PARENT_ROLE_ID" property="parentRoleId"/>
        <result column="STATUS" property="status"/>
        <result column="ABSTRACT" property="abstractFlag"/>
        <result column="CREATEDATE" property="modifydate"/>
        <result column="CREATEBY" property="modifyby"/>
        <result column="REMARKS" property="remarks"/>
    </resultMap>

    <select id="getTeamHeadList" resultMap="SdUserRoleEntity">
        select *
        from USER_ROLE
        WHERE INSTR(ROLE_ID, #{indicator}) &gt; 0
    </select>

    <select id="getUserRoleByUserIdAndStatus" resultMap="SdUserRoleEntity">
        SELECT ur.*
        FROM USER_PROFILE up
        INNER JOIN USER_USER_ROLE uur
        ON up.USER_ID = uur.USER_ID
        INNER JOIN USER_ROLE ur
        ON ur.ROLE_ID = uur.ROLE_ID
        <where>
            <if test="userId != null">
                up.USER_ID = #{userId}
            </if>
            <if test="status != null">
                AND ur.status = #{status}
            </if>
        </where>
    </select>

    <select id="getParentRoleByRoleId" resultMap="SdUserRoleEntity">
        SELECT *
        FROM USER_ROLE
        WHERE ROLE_ID = #{roleId}
    </select>

    <select id="getAllUserRole" resultMap="SdUserRoleEntity">
        SELECT *
        FROM USER_ROLE
        <where>
            <if test="status != null">
                STATUS = #{status}
            </if>
        </where>
        ORDER BY ROLE_ID
    </select>

    <select id="getEligibleRolesByCurrentUserRole" resultMap="SdUserRoleEntity">
        SELECT *
        FROM USER_ROLE
        <where>
            <if test="roleId != null">
                ROLE_ID =
                (SELECT SUBSTR(#{roleId}, (SELECT INSTR(#{roleId}, '__') + 2 FROM DUAL)) FROM DUAL)
            </if>
            <if test="status != null">
                AND STATUS = #{status}
            </if>
        </where>
        ORDER BY ROLE_ID
    </select>

    <insert id="insertUserUserRole">
        INSERT ALL
        <foreach item="roleId" index="index" collection="userRoleList">
            INTO USER_USER_ROLE (USER_ID, ROLE_ID)
            VALUES (#{userId}, #{roleId})
        </foreach>
        SELECT 1 FROM DUAL
    </insert>

    <delete id="deleteUserRoleByUserId">
        DELETE
        FROM USER_USER_ROLE
        WHERE USER_ID = #{userId}
        AND ROLE_ID IN
        <foreach item="roleId" index="index" collection="userRoleList" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <select id="getUserRoleByRoleId" resultMap="SdUserRoleEntity">
        SELECT *
        FROM USER_ROLE
        WHERE ROLE_ID = #{roleId}
    </select>

    <select id="getUserRoleByUserId" resultMap="SdUserRoleEntity">
        SELECT ur.*
        FROM USER_ROLE ur
                 inner join
             USER_USER_ROLE uur
             on
                 ur.ROLE_ID = uur.ROLE_ID
        where uur.USER_ID = #{userId}
    </select>

    <update id="updateUserRole">
        UPDATE USER_ROLE
        SET ROLE_DESC  = #{roleDesc},
            STATUS     = #{status},
            ABSTRACT   = #{abstractFlag},
            MODIFYBY   = #{modifyby},
            MODIFYDATE = CURRENT_TIMESTAMP
        WHERE ROLE_ID = #{roleId}
    </update>

    <select id="getTeamRoleByUserId" resultType="String">
        select uur.ROLE_ID
        from USER_USER_ROLE uur
                 join USER_ROLE ur
                      on ur.ROLE_ID = uur.ROLE_ID
                          and ur.PARENT_ROLE_ID in ('OPT', 'ENG')
        where uur.USER_ID = #{userId}
    </select>

    <select id="getTopUserRole" resultMap="SdUserRoleEntity">
        select *
        from USER_ROLE
        where PARENT_ROLE_ID is null
    </select>

    <select id="getUserRoleByParentRoleId" resultMap="SdUserRoleEntity">
        select *
        from USER_ROLE
        where PARENT_ROLE_ID = #{roleId}
    </select>

    <update id="updateUserUserRoleByUserId">
        update USER_USER_ROLE set USER_ID = #{newUserId} where USER_ID = #{oldUserId}
    </update>

    <select id="getTeamHeadRoleList" resultMap="SdUserRoleEntity">
        select * from USER_ROLE start with ROLE_ID = #{roleId} connect by prior ROLE_ID = PARENT_ROLE_ID order by role_id
    </select>
</mapper>