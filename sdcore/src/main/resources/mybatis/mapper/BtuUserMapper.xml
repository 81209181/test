<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hkt.btu.common.core.dao.mapper.BtuUserMapper" >
    <resultMap id="BtuUserEntity" type="com.hkt.btu.common.core.dao.entity.BtuUserEntity" >
        <result column="USER_ID" property="userId" />
        <result column="NAME" property="name" />
        <result column="STATUS" property="status" />
        <result column="MOBILE" property="mobile" />
        <result column="EMAIL" property="email" />
        <result column="COMPANY_ID" property="companyId" />
        <result column="STAFF_ID" property="staffId" />

        <result column="PASSWORD" property="password" />
        <result column="PASSWORD_MODIFYDATE" property="passwordModifydate" />
        <result column="LOGIN_TRIED" property="loginTried" />

        <result column="CREATEDATE" property="createdate" />
        <result column="CREATEBY" property="createby" />
        <result column="MODIFYDATE" property="modifydate" />
        <result column="MODIFYBY" property="modifyby" />
        <result column="REMARKS" property="remarks" />
    </resultMap>

    <select id="getUserByEmail" resultMap="BtuUserEntity" >
        select *
        from NOC_USER
        where email = #{email}
    </select>

    <select id="getUserByUserId" resultMap="BtuUserEntity" >
        select *
        from NOC_USER
        where USER_ID = #{userId}
        <if test="companyId != null">
            AND COMPANY_ID = #{companyId}
        </if>
    </select>

    <update id="addLoginTriedByUsername" >
        update NOC_USER
        set LOGIN_TRIED = LOGIN_TRIED + 1
        where EMAIL = #{username}
    </update>

    <update id="resetLoginTriedByUsername" >
        update NOC_USER
        set LOGIN_TRIED = 0
        where EMAIL = #{username}
    </update>

    <update id="updateUserStatusByUsername" >
        update NOC_USER
        set STATUS = #{status}, MODIFYBY = #{modifyby}
        where EMAIL = #{username}
    </update>

    <select id="getNewUserId" resultType="Integer" >
        select 1 from dual
    </select>

    <insert id="insertUser" parameterType="com.hkt.btu.common.core.dao.entity.BtuUserEntity"
            useGeneratedKeys="true" keyProperty="userId">
        insert into NOC_USER (NAME, STATUS, MOBILE, EMAIL, COMPANY_ID, STAFF_ID, PASSWORD, PASSWORD_MODIFYDATE, CREATEBY, MODIFYBY)
        values (#{name}, #{status}, #{mobile}, #{email}, #{companyId}, #{staffId}, #{password}, null, #{createby}, #{createby})
    </insert>

    <update id="updateUser" >
        update NOC_USER
        <set>
            <if test="name != null">NAME=#{name},</if>
            <if test="mobile != null">MOBILE=#{mobile},</if>
            <if test="staffId != null">STAFF_ID=#{staffId},</if>
            MODIFYDATE = CURRENT_TIMESTAMP, MODIFYBY = #{modifyby}
        </set>
        where USER_ID = #{userId}
    </update>

    <update id="updateUserPassword" >
        update NOC_USER
        set PASSWORD = #{password}, PASSWORD_MODIFYDATE = CURRENT_TIMESTAMP
        where USER_ID = #{userId}
    </update>

    <insert id="insertPasswordHist" >
        insert into NOC_USER_PWD_HIST (USER_ID, PASSWORD)
        values(#{userId}, #{password})
    </insert>

    <select id="getPasswordHistByUserId" resultType="String" >
        select PASSWORD
        from NOC_USER_PWD_HIST
        where USER_ID = #{userId}
    </select>

    <sql id="searchUserSql">
        from NOC_USER u

        <if test="userGroupId != null">
            inner join NOC_USER_USER_GROUP uug
                on uug.USER_ID = u.USER_ID
                and uug.GROUP_ID = #{userGroupId}
        </if>

        <where>
            <if test="companyId != null"> COMPANY_ID = #{companyId} </if>
            <if test="userId != null">
                AND USER_ID = #{userId}
            </if>
            <if test="email != null">
                <bind name="like_email" value="'%' + email + '%'" />
                AND EMAIL like #{like_email}
            </if>
            <if test="name != null">
                <bind name="like_name" value="'%' + name + '%'" />
                AND NAME like #{like_name}
            </if>
        </where>
    </sql>
    <select id="searchUser" resultMap="BtuUserEntity" >
        # noinspection SqlResolve
        select u.*
        <include refid="searchUserSql"/>
        order by u.EMAIL
        LIMIT #{offset}, #{pageSize}
    </select>
    <select id="countSearchUser" resultType="Integer" >
        select count(1)
        <include refid="searchUserSql"/>
    </select>


</mapper>
