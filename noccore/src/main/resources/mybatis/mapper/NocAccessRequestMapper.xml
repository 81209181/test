<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hkt.btu.noc.core.dao.mapper.NocAccessRequestMapper" >
    <resultMap id="NocAccessRequestEntity" type="com.hkt.btu.noc.core.dao.entity.NocAccessRequestEntity" >
        <result column="ACCESS_REQUEST_ID" property="accessRequestId" />
        <result column="HASHED_ID" property="hashedRequestId" />
        <result column="STATUS" property="status" />

        <result column="REQUESTER_ID" property="requesterId" />
        <result column="REQUESTER_NAME" property="requesterName" />
        <result column="COMPANY_NAME" property="companyName" />
        <result column="MOBILE" property="mobile" />
        <result column="EMAIL" property="email" />

        <result column="VISIT_REASON" property="visitReason" />
        <result column="VISIT_LOCATION" property="visitLocation" />
        <result column="VISIT_RACK_NUM" property="visitRackNum" />
        <result column="VISIT_DATE_FROM" property="visitDateFrom" />
        <result column="VISIT_DATE_TO" property="visitDateTo" />

        <result column="VISITOR_COUNT" property="visitorCount" />

        <result column="CREATEDATE" property="createdate" />
        <result column="CREATEBY" property="createby" />
        <result column="MODIFYDATE" property="modifydate" />
        <result column="MODIFYBY" property="modifyby" />
        <result column="REMARKS" property="remarks" />
    </resultMap>


    <select id="getAccessRequest" resultMap="NocAccessRequestEntity">
        select r.*, count(v.ACCESS_REQUEST_ID) VISITOR_COUNT, h.HASHED_ID
        from NOC_ACCESS_REQUEST r
        left join NOC_ACCESS_REQUEST_HASH h
          on h.ACCESS_REQUEST_ID = r.ACCESS_REQUEST_ID
        left join NOC_ACCESS_REQUEST_VISITOR v
          on v.ACCESS_REQUEST_ID = r.ACCESS_REQUEST_ID
        <where>
            <if test="accessRequestId != null">
                AND r.ACCESS_REQUEST_ID = #{accessRequestId}
            </if>
            <if test="companyId != null">
                AND r.COMPANY_ID = #{companyId}
            </if>
            <if test="userId != null">
                AND r.REQUESTER_ID = #{userId}
            </if>
        </where>
        group by v.ACCESS_REQUEST_ID
    </select>

    <select id="getAccessRequestByVisitorAccessId" resultMap="NocAccessRequestEntity">
        select r.*, h.HASHED_ID
        from NOC_ACCESS_REQUEST r
        left join NOC_ACCESS_REQUEST_HASH h
          on h.ACCESS_REQUEST_ID = r.ACCESS_REQUEST_ID
        inner join NOC_ACCESS_REQUEST_VISITOR v
            ON v.ACCESS_REQUEST_ID = r.ACCESS_REQUEST_ID
        where v.VISITOR_ACCESS_ID = #{visitorAccessId}
    </select>

    <insert id="insertAccessRequest" parameterType="com.hkt.btu.noc.core.dao.entity.NocAccessRequestEntity"
            useGeneratedKeys="true" keyProperty="accessRequestId">
        insert into NOC_ACCESS_REQUEST (STATUS, REQUESTER_ID, REQUESTER_NAME, COMPANY_ID, COMPANY_NAME, MOBILE, EMAIL,
                                        VISIT_REASON, VISIT_LOCATION, VISIT_RACK_NUM, VISIT_DATE_FROM, VISIT_DATE_TO,
                                        CREATEBY, MODIFYBY)
        values (#{status}, #{requesterId}, #{requesterName}, #{companyId}, #{companyName}, #{mobile}, #{email},
                #{visitReason}, #{visitLocation}, #{visitRackNum}, #{visitDateFrom}, #{visitDateTo},
                #{requesterId}, #{requesterId})
    </insert>

    <sql id="searchAccessRequestSql">
        from NOC_ACCESS_REQUEST r
        left join NOC_ACCESS_REQUEST_HASH h
          on h.ACCESS_REQUEST_ID = r.ACCESS_REQUEST_ID
        left join NOC_ACCESS_REQUEST_VISITOR v
          on v.ACCESS_REQUEST_ID = r.ACCESS_REQUEST_ID
        <where>
            <if test="companyId != null">
                AND COMPANY_ID = #{companyId}
            </if>
            <if test="userId != null">
                AND REQUESTER_ID = #{userId}
            </if>
            <if test="accessRequestId != null">
                AND r.ACCESS_REQUEST_ID = #{accessRequestId}
            </if>
            <if test="companyName != null">
                <bind name="like_companyName" value="'%' + companyName + '%'" />
                AND r.COMPANY_NAME like #{like_companyName}
            </if>
            <if test="status != null">
                AND STATUS = #{status}
            </if>
            <if test="visitDateFrom != null">
                AND DATE(VISIT_DATE_FROM) >= DATE(#{visitDateFrom})
            </if>
            <if test="visitDateTo != null">
                AND DATE(#{visitDateTo}) >= DATE(VISIT_DATE_TO)
            </if>
            <if test="visitLocation != null">
                AND UPPER(VISIT_LOCATION) = UPPER(#{visitLocation})
            </if>
        </where>
        group by v.ACCESS_REQUEST_ID
    </sql>
    <select id="searchAccessRequest" resultMap="NocAccessRequestEntity" >
        # noinspection SqlResolve
        select r.*, count(v.ACCESS_REQUEST_ID) VISITOR_COUNT, h.HASHED_ID
        <include refid="searchAccessRequestSql"/>
        order by r.VISIT_DATE_FROM desc, r.VISIT_DATE_TO desc, r.STATUS
        LIMIT #{offset}, #{pageSize}
    </select>
    <select id="countSearchAccessRequest" resultType="Integer" >
        select count(1)
        from (
            select 1
            <include refid="searchAccessRequestSql"/>
        ) search_result
    </select>

    <update id="updateStatus">
        update NOC_ACCESS_REQUEST
        set STATUS = #{newStatus}, MODIFYBY = #{modifyby}
        where ACCESS_REQUEST_ID = #{accessRequestId}
    </update>

    <select id="getExpiredAccessRequest" resultMap="NocAccessRequestEntity">
        select r.*, h.HASHED_ID
        from NOC_ACCESS_REQUEST r
        left join NOC_ACCESS_REQUEST_HASH h
          on h.ACCESS_REQUEST_ID = r.ACCESS_REQUEST_ID
        where DATE(CURRENT_TIMESTAMP) > DATE(r.VISIT_DATE_TO)
        and r.STATUS != #{completeStatus}
    </select>

    <select id="getMaxAccessRequestId" resultType="Integer">
        SELECT max(ACCESS_REQUEST_ID)
        FROM NOC_ACCESS_REQUEST
    </select>


</mapper>
